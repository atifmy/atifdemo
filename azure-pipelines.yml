# Maven
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode'
    veracodeAppProfile: 'Azure'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    importResults: true
    maximumWaitTime: '360'
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# This is an example of using VeraDemo Java test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.
trigger:
- main
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: Maven@3
  displayName: Build with Maven
  inputs:
    mavenPomFile: 'app/pom.xml'
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: 'ea582ecd22a4414925512d647d4981eb'
    apiKey: '78c8537db9fc19ee78dd4ca2970c6c3c8408b3f1d88180d1c4360fce1744f8239361a51604de917a8cdef8d5d6627e528c047debd49fe2a9467f0a409b4b7980'
    veracodeAppProfile: '$(system.teamProject)'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    importResults: true
    failBuildOnPolicyFail: true
    maximumWaitTime: '360'    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: Bash@3
  displayName: Veracode Pipeline
  inputs:
    targetType: 'inline'
    script: |
      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip -o pipeline-scan-LATEST.zip
      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f /home/vsts/work/1/s/app/target/verademo.war || true
- publish: $(System.DefaultWorkingDirectory)/results.json
  artifact: VeracodeBaseline
